<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="DisplayedTimespan" xml:space="preserve">
    <value>Displayed timespan</value>
  </data>
	<data name="SavedBackupTo0Logging" xml:space="preserve">
    <value>Saved Backup to {0}</value>
  </data>
	<data name="LoadOfFile0Wasuccesful" xml:space="preserve">
    <value>Load of File {0} was succesful</value>
  </data>
	<data name="ErrorDuringLoadOfFile" xml:space="preserve">
    <value>Error during load of file</value>
  </data>
	<data name="UpdatedLeftTextBox" xml:space="preserve">
    <value>Updated left TextBox</value>
  </data>
	<data name="UpdatedRightTextBox" xml:space="preserve">
    <value>Updated right TextBox</value>
  </data>
	<data name="ReadPersistentVariables" xml:space="preserve">
    <value>Read Persistent Variables</value>
  </data>
	<data name="ClientConnectedToDevice0WithAddress1" xml:space="preserve">
    <value>Client connected to device {0} with address  {1} </value>
  </data>
	<data name="CouldNotDeleteObserverForSymbol0" xml:space="preserve">
    <value>Could not delete Observer for symbol {0}</value>
  </data>
	<data name="ErrorDuringSearch" xml:space="preserve">
    <value>Error during search</value>
  </data>
	<data name="CouldNotReloadVariables" xml:space="preserve">
    <value>Could not reload variables</value>
  </data>
	<data name="CouldNotRegisterObserverForSymbol0" xml:space="preserve">
    <value>Could not register Observer for Symbol {0}</value>
  </data>
	<data name="CouldNotUpdateTree" xml:space="preserve">
    <value>Could not update Tree</value>
  </data>
	<data name="ThisTypeIsNotImplemented" xml:space="preserve">
    <value>This type is not implemented.</value>
  </data>
	<data name="TheSymbol0HasAlreadyBeenAddedToTheListOfObservables" xml:space="preserve">
    <value>The symbol {0} has already been added to the list of observables</value>
  </data>
	<data name="TryingToWriteJSON0WithValue1" xml:space="preserve">
    <value>Trying to write JSON {0} with value {1}</value>
  </data>
	<data name="FileDoesNotHaveTheSameStructureAsThePlc" xml:space="preserve">
    <value>File does not have the same structure as the Plc</value>
  </data>
	<data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
	<data name="UpdatedRestoreView" xml:space="preserve">
    <value>Updated RestoreView</value>
  </data>
	<data name="AreYouSureYouWantToOverwriteTheLiveVariablesOnThePLC" xml:space="preserve">
    <value>Are you sure you want to overwrite the LiveVariables on the PLC?</value>
  </data>
	<data name="OverwriteConfirmation" xml:space="preserve">
    <value>Overwrite Confirmation</value>
  </data>
	<data name="ThisValueIsReadOnly" xml:space="preserve">
    <value>This value is Read Only</value>
  </data>
	<data name="ReadOnlyValue" xml:space="preserve">
    <value>Read Only Value</value>
  </data>
	<data name="TryingToWriteTo0WithValue1" xml:space="preserve">
    <value>Trying to write to {0} with value {1}</value>
  </data>
	<data name="ReadFromPLC" xml:space="preserve">
    <value>Read from PLC</value>
  </data>
	<data name="SaveToFile" xml:space="preserve">
    <value>Save to file</value>
  </data>
	<data name="LoadFromFile" xml:space="preserve">
    <value>Load from file</value>
  </data>
	<data name="RefreshDataFromPLC" xml:space="preserve">
    <value>Refresh data from PLC</value>
  </data>
	<data name="EnterSymbolnameToSearch" xml:space="preserve">
    <value>Enter symbolname to search</value>
  </data>
	<data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
	<data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
	<data name="NewValue" xml:space="preserve">
    <value>New value</value>
  </data>
	<data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
	<data name="AddGraph" xml:space="preserve">
    <value>Add Graph</value>
  </data>
	<data name="RemoveGraph" xml:space="preserve">
    <value>Remove Graph</value>
  </data>
	<data name="Load" xml:space="preserve">
    <value>Load</value>
  </data>
	<data name="Write" xml:space="preserve">
    <value>Write</value>
  </data>
	<data name="Backup" xml:space="preserve">
    <value>Backup</value>
  </data>
	<data name="Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
	<data name="Compare" xml:space="preserve">
    <value>Compare</value>
  </data>
	<data name="Explore" xml:space="preserve">
    <value>Explore</value>
  </data>
	<data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
	<data name="NoItemsToDisplay" xml:space="preserve">
    <value>No items to display</value>
  </data>
	<data name="PoweredBy" xml:space="preserve">
    <value>Powered by</value>
  </data>
	<data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
	<data name="Tree" xml:space="preserve">
    <value>Tree</value>
  </data>
	<data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
	<data name="Address" xml:space="preserve">
    <value>Address:</value>
  </data>
	<data name="Port" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="Dll_for_TwinCAT_Ads_not_found__Have_you_installed_the_drivers" xml:space="preserve">
    <value>Dll for TwinCAT.Ads not found. Have you installed the drivers?</value>
  </data>
  <data name="ConnectionCabViewModel_ConnectClient_Dll_for_TwinCAT_Ads_not_found__Have_you_installed_the_drivers_" xml:space="preserve">
    <value>Dll for TwinCAT.Ads not found. Have you installed the drivers?</value>
  </data>
	<data name="UseFlatSymbolList" xml:space="preserve">
		<value>Use flat symbol list</value>
	</data>
</root>