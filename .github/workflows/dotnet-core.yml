name: .NET Core Build

on:
  push:
    branches:
      - master
      - develop
      - 'features/**'
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Publish
      run: dotnet publish TwinCatAdsTool\TwinCatAdsTool.csproj -c Release /p:AssemblyVersion=1.2.${{ github.run_number }} /p:FileVersion=1.2.${{ github.run_number }} -o out
    - name: Compress
      run: Compress-Archive out\TwinCatAdsTool.exe TwinCatAdsTool_v1.2.${{ github.run_number }}.zip
    - name: Publish ReadyToRun
      run: dotnet publish TwinCatAdsTool\TwinCatAdsTool.csproj -c Release /p:AssemblyVersion=1.2.${{ github.run_number }} /p:FileVersion=1.2.${{ github.run_number }} /p:SelfContained=true /p:PublishReadyToRun=true -o out
    - name: Compress ReadyToRun
      run: Compress-Archive out\TwinCatAdsTool.exe TwinCatAdsTool_ReadyToRun_v1.2.${{ github.run_number }}.zip
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 1.2.${{ github.run_number }}
        release_name: 1.2.${{ github.run_number }}
        draft: false
        prerelease: true
    - name: Upload
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: TwinCatAdsTool_v1.2.${{ github.run_number }}.zip
        asset_name: TwinCatAdsTool_v1.2.${{ github.run_number }}.zip
        asset_content_type: application/zip
    - name: Upload ReadyToRun
      id: upload-release-asset2 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: TwinCatAdsTool_ReadyToRun_v1.2.${{ github.run_number }}.zip
        asset_name: TwinCatAdsTool_ReadyToRun_v1.2.${{ github.run_number }}.zip
        asset_content_type: application/zip
